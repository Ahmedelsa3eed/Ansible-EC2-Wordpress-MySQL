---
- name: Create a VPC
  tags: create_vpc
  amazon.aws.ec2_vpc_net:
    access_key: "{{ access_key }}"
    secret_key: "{{ secret_key }}"
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ region }}"
    dns_hostnames: yes
    dns_support: yes
    state: present
    tenancy: default
  register: vpc

- name: Create a public subnet
  amazon.aws.ec2_vpc_subnet:
    access_key: "{{ access_key }}"
    secret_key: "{{ secret_key }}"
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ subnet_cidr }}"
    region: "{{ region }}"
    az: "{{ subnet_zone }}"
    map_public: yes
    tags:
      Name: "{{ subnet_name }}"
    state: present
    wait: yes
  register: subnet

- name: Create a new security group
  amazon.aws.ec2_security_group:
    access_key: "{{ access_key }}"
    secret_key: "{{ secret_key }}"
    name: "{{ security_group_name }}"
    description: "new security group"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    state: present
    rules: "{{ rules }}"
  register: security_group

- name: Create VPC gateway
  amazon.aws.ec2_vpc_igw:
    access_key: "{{ access_key }}"
    secret_key: "{{ secret_key }}"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    tags:
      Name: "{{ vpc.vpc.id  }}-igw"
  register: igw

- name: Set up public subnet route table
  amazon.aws.ec2_vpc_route_table:
    access_key: "{{ access_key }}"
    secret_key: "{{ secret_key }}"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    tags:
      Name: PublicRoute
    subnets: "{{ [subnet.subnet.id] }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
      - dest: ::/0
        gateway_id: "{{ igw.gateway_id }}"
  register: public_route_table

- name: Create an EC2 key pair
  tags: [ create_ec2, create_key ]
  amazon.aws.ec2_key:
    access_key: "{{ access_key }}"
    secret_key: "{{ secret_key }}"
    name: "{{ key_name }}"
    key_material: "{{ lookup('file', key_path) }}"
    region: "{{ region }}"
    force: false
  register: key

- name: Create an EC2 instance
  tags: create_ec2
  amazon.aws.ec2_instance:
    access_key: "{{ access_key }}"
    secret_key: "{{ secret_key }}"
    name: "{{ machine_name }}"
    region: "{{ region }}"
    key_name: "{{ key_name }}"
    vpc_subnet_id: "{{ subnet.subnet.id }}"
    instance_type: "{{ machine_type }}"
    security_group: "{{ security_group.group_id }}"
    volumes:
      - device_name: "{{ system_disk_device }}"
        ebs:
          volume_size: "{{ system_disk_size }}"
          delete_on_termination: true
          volume_type: "{{ system_disk_type }}"
    image_id: "{{ image_id }}"
    wait: true
  register: ec2

- name: Pause for 30 seconds
  tags: create_ec2
  pause:
    seconds: 30

- name: allocate a new elastic IP and associate it with the instance
  amazon.aws.ec2_eip:
    access_key: "{{ access_key }}"
    secret_key: "{{ secret_key }}"
    region: "{{ region }}"
    device_id: "{{ ec2.instances[0].instance_id }}"
    tag_name: instance_id
    release_on_disassociation: true
    tag_value: "{{ ec2.instances[0].instance_id }}"
  register: eip

- name: Add host to group 'new_instance'
  tags: [ create_ec2, add_host ]
  add_host:
    name: '{{ eip.public_ip }}'
    groups: new_instance

- name: Print instance public ip address
  tags: [ info, create_ec2 ]
  debug:
    msg: "Instance IP is {{ eip.public_ip }}"